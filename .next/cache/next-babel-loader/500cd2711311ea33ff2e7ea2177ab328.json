{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\APS\\\\Desktop\\\\Experiement\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport axios from \"axios\";\n\nvar Index = function Index(props) {\n  console.log(props, \"af\");\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"This is index\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/about\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, \"Go to about page\")), props.posts.map(function (post, i) {\n    return __jsx(\"p\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, post.name);\n  })));\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var posts;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n\n        case 2:\n          posts = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: posts.data\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index; //getInitialProps is a life cycle name hook\n//this life cycle run when component initially mount\n//and it runs on both server and client\n//what we return in posts..it will be passed as props to Index\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/APS/Desktop/Experiement/pages/index.js"],"names":["Link","axios","Index","props","console","log","posts","map","post","i","name","getInitialProps","get","data"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,IAAnB;AACA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIGA,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,CAAP;AAAA,WACf;AAAG,MAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYD,IAAI,CAACE,IAAjB,CADe;AAAA,GAAhB,CAJH,CAFF,CADF;AAaD,CAfD;;KAAMR,K;AAiBNA,KAAK,CAACS,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFV,KAAK,CAACW,GAAN,CAAU,4CAAV,CADE;;AAAA;AAChBN,UAAAA,KADgB;AAAA,2CAEf;AACLA,YAAAA,KAAK,EAAEA,KAAK,CAACO;AADR,WAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAOA,eAAeX,KAAf,C,CACA;AACA;AACA;AACA","sourcesContent":["import Link from \"next/link\";\r\nimport axios from \"axios\";\r\nconst Index = (props) => {\r\n  console.log(props, \"af\");\r\n  return (\r\n    <React.Fragment>\r\n      <h2>This is index</h2>\r\n      <div>\r\n        <Link href=\"/about\">\r\n          <a>Go to about page</a>\r\n        </Link>\r\n        {props.posts.map((post, i) => (\r\n          <p key={i}>{post.name}</p>\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async () => {\r\n  const posts = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\r\n  return {\r\n    posts: posts.data,\r\n  };\r\n};\r\n\r\nexport default Index;\r\n//getInitialProps is a life cycle name hook\r\n//this life cycle run when component initially mount\r\n//and it runs on both server and client\r\n//what we return in posts..it will be passed as props to Index\r\n"]},"metadata":{},"sourceType":"module"}