{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\APS\\\\Desktop\\\\Experiement\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport axios from \"axios\";\n\nconst Index = props => {\n  console.log(props, \"af\");\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"This is index\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, \" Go to about page\")), props.posts.map((post, i) => __jsx(\"p\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, post.name))));\n};\n\nIndex.getInitialProps = async () => {\n  const posts = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n  return {\n    posts: posts.data\n  };\n};\n\nexport default Index; //getInitialProps is a life cycle name hook\n//this life cycle run when component initially mount\n//and it runs on both server and client\n//what we return in posts..it will be passed as props to Index","map":{"version":3,"sources":["C:/Users/APS/Desktop/Experiement/pages/index.js"],"names":["Link","axios","Index","props","console","log","posts","map","post","i","name","getInitialProps","get","data"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,IAAnB;AACA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIGA,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KACf;AAAG,IAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYD,IAAI,CAACE,IAAjB,CADD,CAJH,CAFF,CADF;AAaD,CAfD;;AAiBAR,KAAK,CAACS,eAAN,GAAwB,YAAY;AAClC,QAAML,KAAK,GAAG,MAAML,KAAK,CAACW,GAAN,CAAU,4CAAV,CAApB;AACA,SAAO;AACLN,IAAAA,KAAK,EAAEA,KAAK,CAACO;AADR,GAAP;AAGD,CALD;;AAOA,eAAeX,KAAf,C,CACA;AACA;AACA;AACA","sourcesContent":["import Link from \"next/link\";\r\nimport axios from \"axios\";\r\nconst Index = (props) => {\r\n  console.log(props, \"af\");\r\n  return (\r\n    <React.Fragment>\r\n      <h2>This is index</h2>\r\n      <div>\r\n        <Link>\r\n          <a href=\"/about\"> Go to about page</a>\r\n        </Link>\r\n        {props.posts.map((post, i) => (\r\n          <p key={i}>{post.name}</p>\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async () => {\r\n  const posts = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\r\n  return {\r\n    posts: posts.data,\r\n  };\r\n};\r\n\r\nexport default Index;\r\n//getInitialProps is a life cycle name hook\r\n//this life cycle run when component initially mount\r\n//and it runs on both server and client\r\n//what we return in posts..it will be passed as props to Index\r\n"]},"metadata":{},"sourceType":"module"}